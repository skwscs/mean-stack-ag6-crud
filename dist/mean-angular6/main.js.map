{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book-detail/book-detail.component.css","webpack:///./src/app/book-detail/book-detail.component.html","webpack:///./src/app/book-detail/book-detail.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\nconst apiUrl = \"/api\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  };\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n\r\n  getBooks(): Observable<any> {\r\n    return this.http.get(apiUrl, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  getBook(id: string): Observable<any> {\r\n    const url = `${apiUrl}/${id}`;\r\n    return this.http.get(url, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  postBook(data): Observable<any> {\r\n    return this.http.post(apiUrl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateBook(id: string, data): Observable<any> {\r\n    const url = `${apiUrl}/${id}`;\r\n    return this.http.put(url, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteBook(id: string): Observable<{}> {\r\n    const url = `${apiUrl}/${id}`;\r\n    return this.http.delete(url, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BookComponent } from './book/book.component';\r\nimport { BookDetailComponent } from './book-detail/book-detail.component';\r\nimport { BookCreateComponent } from './book-create/book-create.component';\r\nimport { BookEditComponent } from './book-edit/book-edit.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatInputModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatFormFieldModule } from \"@angular/material\";\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'books',\r\n    component: BookComponent,\r\n    data: { title: 'Book List' }\r\n  },\r\n  {\r\n    path: 'book-details/:id',\r\n    component: BookDetailComponent,\r\n    data: { title: 'Book Details' }\r\n  },\r\n  {\r\n    path: 'book-create',\r\n    component: BookCreateComponent,\r\n    data: { title: 'Create Book' }\r\n  },\r\n  {\r\n    path: 'book-edit/:id',\r\n    component: BookEditComponent,\r\n    data: { title: 'Edit Book' }\r\n  },\r\n  { path: '',\r\n    redirectTo: '/books',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BookComponent,\r\n    BookDetailComponent,\r\n    BookCreateComponent,\r\n    BookEditComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes, {onSameUrlNavigation: 'reload'}),\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\r\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\r\\n</div>\\r\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"FirstName\\\" formControlName=\\\"firstname\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('firstname').valid && bookForm.get('firstname').touched\\\">Please enter FirstName</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"LastName\\\" formControlName=\\\"lastname\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('lastname').valid && bookForm.get('lastname').touched\\\">Please enter LastName</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('email').valid && bookForm.get('email').touched\\\">Please enter Email</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-book-create',\r\n  templateUrl: './book-create.component.html',\r\n  styleUrls: ['./book-create.component.css']\r\n})\r\nexport class BookCreateComponent implements OnInit {\r\n\r\n  bookForm: FormGroup;\r\n  firstname:string='';\r\n  lastname:string='';\r\n  email:string='';\r\n  \r\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.bookForm = this.formBuilder.group({\r\n      'firstname' : [null, Validators.required],\r\n      'lastname' : [null, Validators.required],\r\n      'email' : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form:NgForm) {\r\n    this.api.postBook(form)\r\n      .subscribe(res => {\r\n          let id = res['_id'];\r\n          this.router.navigate(['/books']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        });\r\n  }\r\n}\r\n","module.exports = \".example-card {\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\r\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\r\\n</div>\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title><h2>Detail</h2></mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <dl>\\r\\n      <dt>FirstName:</dt>\\r\\n      <dd>{{book.firstname}}</dd>\\r\\n      <dt>LastName:</dt>\\r\\n      <dd>{{book.lastname}}</dd>\\r\\n      <dt>Email:</dt>\\r\\n      <dd>{{book.email}}</dd>\\r\\n    </dl>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-book-detail',\r\n  templateUrl: './book-detail.component.html',\r\n  styleUrls: ['./book-detail.component.css']\r\n})\r\nexport class BookDetailComponent implements OnInit {\r\n\r\n  book = {};\r\n\r\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getBookDetails(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getBookDetails(id) {\r\n    this.api.getBook(id)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.book = data;\r\n      });\r\n  }\r\n\r\n  deleteBook(id) {\r\n    this.api.deleteBook(id)\r\n      .subscribe(res => {\r\n          this.router.navigate(['/books']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<!-- <div class=\\\"button-row\\\">\\r\\n  <a mat-raised-button color=\\\"primary\\\" (click)=\\\"bookDetails()\\\"><mat-icon>show</mat-icon></a>\\r\\n</div> -->\\r\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"FirstName\\\" formControlName=\\\"firstname\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('firstname').valid && bookForm.get('firstname').touched\\\">Please enter FirstName</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"LastName\\\" formControlName=\\\"lastname\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('lastname').valid && bookForm.get('lastname').touched\\\">Please enter LastName</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('email').valid && bookForm.get('email').touched\\\">Please enter Email</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-book-edit',\r\n  templateUrl: './book-edit.component.html',\r\n  styleUrls: ['./book-edit.component.css']\r\n})\r\nexport class BookEditComponent implements OnInit {\r\n\r\n  bookForm: FormGroup;\r\n  id:string = '';\r\n  firstname:string = '';\r\n  lastname:string = '';\r\n  email:string = '';\r\n  \r\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.getBook(this.route.snapshot.params['id']);\r\n    this.bookForm = this.formBuilder.group({\r\n      'firstname' : [null, Validators.required],\r\n      'lastname' : [null, Validators.required],\r\n      'email' : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  getBook(id) {\r\n    this.api.getBook(id).subscribe(data => {\r\n      this.id = data._id;\r\n      this.bookForm.setValue({\r\n        firstname: data.firstname,\r\n        lastname: data.lastname,\r\n        email: data.email\r\n      });\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form:NgForm) {\r\n    this.api.updateBook(this.id, form)\r\n      .subscribe(res => {\r\n          let id = res['_id'];\r\n          this.router.navigate(['/books']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  bookDetails() {\r\n    this.router.navigate(['/book-details', this.id]);\r\n  }\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.firstname-col {\\r\\n  flex: 0 0 0 100px !important;\\r\\n  white-space: unset !important;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\\r\\n.actionrow{\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\r\\n  \\r\\n</div>\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- FirstName Column -->\\r\\n    <ng-container matColumnDef=\\\"firstname\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> FirstName </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"firstname-col\\\"> {{element.firstname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- LastName Column -->\\r\\n    <ng-container matColumnDef=\\\"lastname\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> LastName </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-create']\\\">Add New Row</a> </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"actionrow\\\"> \\r\\n        <button color=\\\"default\\\" [routerLink]=\\\"['/book-edit', element._id]\\\"><mat-icon>edit</mat-icon></button>\\r\\n        <button color=\\\"default\\\" (click)=\\\"deleteBook(element._id)\\\"><mat-icon>delete</mat-icon></button> \\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [style.background-color]=\\\"getBackgroundColor(row.firstname)\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class BookComponent implements OnInit {\r\n\r\n  books: any;\r\n  displayedColumns = ['firstname', 'lastname', 'email', 'action'];\r\n  dataSource = new BookDataSource(this.api);\r\n  backcolor={\r\n    'Default': '#007bff',\r\n    'Success': '#1e7e34',\r\n    'Danger': '#dc3545',\r\n    'Info': '#17a2b8',\r\n    'Warning':'#ffc107',\r\n    'Active':'#fff'\r\n  }\r\n\r\n  constructor(private api: ApiService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.api.getBooks()\r\n      .subscribe(res => {\r\n        console.log(res);\r\n        this.books = res;\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteBook(id) {\r\n    this.api.deleteBook(id)\r\n      .subscribe(res => {\r\n          this.router.navigate(['/books']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n  getBackgroundColor(firstname){\r\n    return this.backcolor.hasOwnProperty(firstname) ? this.backcolor[firstname]:'white';\r\n  }\r\n}\r\n\r\nexport class BookDataSource extends DataSource<any> {\r\n  constructor(private api: ApiService) {\r\n    super()\r\n  }\r\n\r\n  connect() {\r\n    return this.api.getBooks();\r\n  }\r\n\r\n  disconnect() {\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  PORT: 3000\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}